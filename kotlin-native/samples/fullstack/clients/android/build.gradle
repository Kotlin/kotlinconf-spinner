buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:+"
        classpath 'com.android.tools.build:gradle-experimental:0.9.3'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

def platforms = [
        "armeabi-v7a": [konanTarget: "android_arm32", directory: "out/arm32"],
        "arm64-v8a"  : [konanTarget: "android_arm64", directory: "out/arm64"]
]

apply plugin: "konan"
apply plugin: "com.android.model.application"

konan.targets = ['android_arm32', 'android_arm64']

konanArtifacts {

    interop ('openal') {
        defFile "openal.def"
        includeDirs "$openalPath/include"
        includeDirs "."
    }

    program ('Loader') {
        srcDir 'src/loader'
        artifactName 'libloader'
    }

    program ('Kotlin3d') {
        artifactName 'libkotlin3d'
        srcFiles fileTree('../shared/src/main/kotlin')
        srcFiles fileTree('src/main/kotlin')
        enableOptimizations true
        libraries {
            artifact 'openal'
            allLibrariesFrom common, json, kurl
        }

        target('android_arm32') {
            linkerOpts "-L$libcurlPath/lib/armeabi-v7a -lcurl " +
                    "$janssonPath/arm32/lib/libjansson.a " +
                    "-L$openalPath/lib/armeabi-v7a -lopenal -lz"
        }

        target('android_arm64') {
            linkerOpts "-L$libcurlPath/lib/arm64-v8a -lcurl " +
                    "$janssonPath/arm64/lib/libjansson.a " +
                    "-L$openalPath/lib/arm64-v8a -lopenal -lz"
        }

    }
}

task copyLibs(type: Copy) {
    dependsOn konanArtifacts.Kotlin3d
    dependsOn konanArtifacts.Loader
    destinationDir projectDir

    platforms.each { _, platform ->
        into(platform.directory) {
            from konanArtifacts.Kotlin3d."$platform.konanTarget".artifact
            from konanArtifacts.Loader."$platform.konanTarget".artifact
        }
    }
}

clean {
    doLast {
        delete 'out'
    }
}

tasks.matching { it.name == 'preBuild' }.all {
    it.dependsOn copyLibs
}

model {
    android {
        compileSdkVersion = 25
        buildToolsVersion = '25.0.2'

        defaultConfig {
            applicationId = 'com.jetbrains.konan_activity'
            minSdkVersion.apiLevel   18
            targetSdkVersion.apiLevel  25
        }

        ndk {
            moduleName = "kotlin3d"
        }

        productFlavors {
            create("arm") {
                ndk {
                    abiFilters.addAll("armeabi-v7a", "arm64-v8a")
                }
            }
        }

        buildTypes {
            debug {
               debuggable = true
               ndk {
                 debuggable = true
               }
            }
            release {
                // Add RELEASE_STORE_FILE RELEASE_STORE_PASSWORD RELEASE_KEY_ALIAS
                // and RELEASE_KEY_PASSWORD to ~/.gradle/gradle.properties
                // to sign release build. Keystore could be created from
                // Android Studio.
                if (project.hasProperty("RELEASE_STORE_FILE")) {
                   signingConfig = $("android.signingConfigs.release")
                }
            }
        }
    }

    android.signingConfigs {
      create("release") {
        if (project.hasProperty("RELEASE_STORE_FILE")) {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
      }
    }

    repositories {
        libs(PrebuiltLibraries) {
            libkotlin3d {
                    binaries.withType(SharedLibraryBinary) {
                        def name = targetPlatform.getName()
                        def platform = platforms[name]
                        if (platform != null) {
                            sharedLibraryFile = file("$platform.directory/libkotlin3d.so")
                        }
                    }
            }
            libloader {
                binaries.withType(SharedLibraryBinary) {
                    def name = targetPlatform.getName()
                    def platform = platforms[name]
                    if (platform != null) {
                        sharedLibraryFile = file("$platform.directory/libloader.so")
                    }
                }
            }
            libopenal {
                    binaries.withType(SharedLibraryBinary) {
                        def name = targetPlatform.getName()
                        def platform = platforms[name]
                        if (platform != null) {
                            sharedLibraryFile = file("$openalPath/lib/$name/libopenal.so")
                        }
                    }
            }
       }
    }
    android.sources {
        main {
            jniLibs {
                dependencies {
                    library "libkotlin3d"
                    library "libloader"
                    library "libopenal"
                }
            }
        }
    }
}

task buildApk(type: Copy) {
    dependsOn "assembleDebug"
    destinationDir projectDir
    from ('build/outputs/apk') {
        into 'out'
    }
}
